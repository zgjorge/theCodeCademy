destinations = ['Paris, France', 'Shanghai, China', 'Los Angeles, USA', 'São Paulo, Brazil', 'Cairo, Egypt']

# Test traveler
# Name, current location, likings
test_traveler = ['Erin Wilkes', 'Shanghai, China', ['Historical site', 'art']]

attractions = []
for element in destinations:
    attractions += [[]]


# Finding destination index
def get_destination_index(destination):
    destination_index = destinations.index(destination)
    return destination_index


def get_traveler_location(traveler):
    traveler_destination = traveler[1]
    traveler_destination_index = destinations.index(traveler_destination)
    return traveler_destination_index


# Adding attractions , check 31
def add_attraction(destination, attraction):
    try:
        destination_index = get_destination_index(destination)
        attractions_for_destination = attractions[destination_index]
        attractions[destination_index].append(attraction)
        return destination_index
    except:
        return destination + " Element not found in list"


"""
POPULATING LIST
"""
add_attraction("Paris, France", ["the Louvre", ["art", "museum"]])
add_attraction("Paris, France", ["Arc de Triomphe", ["historical site", "monument"]])
add_attraction("Shanghai, China", ["Yu Garden", ["garden", "historcical site"]])
add_attraction("Shanghai, China", ["Yuz Museum", ["art", "museum"]])
add_attraction("Shanghai, China", ["Oriental Pearl Tower", ["skyscraper", "viewing deck"]])
add_attraction("Los Angeles, USA", ["LACMA", ["art", "museum"]])
add_attraction("São Paulo, Brazil", ["São Paulo Zoo", ["zoo"]])
add_attraction("São Paulo, Brazil", ["Pátio do Colégio", ["historical site"]])
add_attraction("Cairo, Egypt", ["Pyramids of Giza", ["monument", "historical site"]])
add_attraction("Cairo, Egypt", ["Egyptian Museum", ["museum"]])


# Finding best places to go, check 48
def find_attractions(destination, interests):
    destination_index = get_destination_index(destination)
    attractions_in_city = attractions[destination_index]
    attractions_with_interest = []
    for possible_attraction in attractions_in_city:
        attraction_tags = possible_attraction[1]
        # print(attraction_tags)
        for interest in interests:
            if interest in attraction_tags:
                # print("Found")
                attractions_with_interest.append(possible_attraction[0])
                # print(possible_attraction)
    return attractions_with_interest


# Checking parts of the city user is interested
def get_attractions_for_traveler(traveler):
    traveler_destination = traveler[1]
    traveler_interests = traveler[2]
    traveler_attractions = find_attractions(traveler_destination, traveler_interests)
    the_list = ""
    for element in traveler_attractions:
        the_list += element
    interests_string = 'Hi ' + traveler[0] + ", we think you'll like these places around " + traveler[
        1] + ": " + the_list

    return interests_string


"""
TEST
"""
# la_arts = find_attractions("Los Angeles, USA", ['art'])
# print(la_arts)

smills_france = get_attractions_for_traveler(['Dereck Smill', 'Paris, France', ['monument']])

print(smills_france)

"""
TESTS
"""

# print(add_attraction('Los Angeles, USA',['Venice Beach', ['beach']])  )
# print(attractions)


# test_destination_index = get_traveler_location(test_traveler)
# print(test_destination_index)

# add_attraction("Los Angeles, USA",['Venice Beach', ['beach']] )
# print(get_traveler_location(['Erin Wilkes', 'Shanghai, China']))
# print(add_attraction('Paris, Francde', 'art'))

